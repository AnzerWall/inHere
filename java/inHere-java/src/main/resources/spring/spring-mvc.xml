<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 启动对@AspectJ注解的支持 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 扫描web控制层的Bean -->
	<context:component-scan
		base-package="com.inHere.web,com.inHere.authorization,com.inHere.exception,com.inHere.validator" />

	<!-- 简化配置:（注解方式取代处理器映射器bean、处理器适配器bean） 1、自动注册DefaultAnnotationHandlerMapping,AnnotationMethodHandlerAdapter 
		2、提供一系列:数据绑定,数字和日期的format,@NumberFormat,@DataTimeFormat,xml,json默认读写支持 -->
	<mvc:annotation-driven />

	<!-- 静态资源路径映射处理 1、加入对静态资源的处理:js,css,gif,png 2、允许使用"/"做整体映射 -->
	<!--<mvc:resources location="/WEB-INF/resources/" mapping="/resources/**"/> -->
	<mvc:default-servlet-handler />

	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<!--<bean class=""></bean> -->
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/**" />
			<bean class="com.inHere.Interceptor.AuthorizationInterceptor" />
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>

	<!-- 文件上传配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 上传文件的最大值，单位是byte，在Controller处理，默认没有限制100*1024*1024, 存在bug的tomcat会出项循环重定向：http://gold.xitu.io/entry/57b57db92e958a00562eb08f -->
		<property name="maxUploadSize" value="104857600" />
		<property name="defaultEncoding" value="utf-8" />
		<!-- resolveLazily属性启用是延迟文件解析，以便Controller中处理异常 -->
		<property name="resolveLazily" value="true" />
	</bean>

</beans>