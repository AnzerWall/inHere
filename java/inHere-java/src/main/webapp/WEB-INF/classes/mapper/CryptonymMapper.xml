<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.inHere.dao.CryptonymMapper">

	<resultMap id="BaseResultMap" type="com.inHere.entity.Cryptonym">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, name
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from tb_cryptonym
		where id = #{id,jdbcType=INTEGER}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		tb_cryptonym
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.inHere.entity.Cryptonym">
		insert into tb_cryptonym (id,
		name)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})
	</insert>

	<insert id="insertSelective" parameterType="com.inHere.entity.Cryptonym">
		insert into tb_cryptonym
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.inHere.entity.Cryptonym">
		update tb_cryptonym
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.inHere.entity.Cryptonym">
		update
		tb_cryptonym
		set name = #{name,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=INTEGER}
	</update>

	<insert id="insertCryptonyms">
		<if test="list != null">
			insert into tb_cryptonym (name) VALUES
			<foreach collection="list" item="item" open=" " close=" " separator=",">
				( #{item.name} )
			</foreach>
		</if>
	</insert>

</mapper>